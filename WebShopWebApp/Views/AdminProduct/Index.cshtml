@using WebShopWebApp.ViewModels
@model AdminSearchVM

@{
    ViewData["Title"] = "Index";
}

<div class="container mt-4">
    <h1 class="mb-4">Products</h1>

    <form asp-action="Index" method="GET" class="mb-4">
        <div class="row g-3 align-items-end">
            <div class="col-md-4">
                <label asp-for="Q" class="form-label">Search products</label>
                <input asp-for="Q" class="form-control" placeholder="Enter product name..." />
            </div>
            <div class="col-md-3">
                <label asp-for="OrderBy" class="form-label">Sort by</label>
                <select asp-for="OrderBy" class="form-select">
                    <option value="id">(Default)</option>
                    <option value="name">Name</option>
                    <option value="price">Price</option>
                    <option value="brand">Brand</option>
                    <option value="category">Category</option>
                </select>
            </div>
            <div class="col-md-2">
                <label asp-for="Size" class="form-label">Show</label>
                <select asp-for="Size" class="form-select">
                    <option>3</option>
                    <option>5</option>
                    <option>10</option>
                    <option>20</option>
                    <option>50</option>
                </select>
            </div>
            <div class="col-md-3">
                <button type="submit" class="btn btn-primary w-100">Search</button>
            </div>
        </div>
    </form>

    <div class="mb-3">
        <a asp-action="Create" class="btn btn-success"><i class="bi bi-plus-circle"></i> New product</a>
    </div>

    <div class="table-responsive">
        <table class="table table-bordered align-middle shadow-sm">
            <thead class="table-light">
                <tr>
                    <th>@Html.DisplayNameFor(model => model.Products.ElementAt(0).Id)</th>
                    <th>@Html.DisplayNameFor(model => model.Products.ElementAt(0).Name)</th>
                    <th>@Html.DisplayNameFor(model => model.Products.ElementAt(0).Description)</th>
                    <th>@Html.DisplayNameFor(model => model.Products.ElementAt(0).Price)</th>
                    <th>@Html.DisplayNameFor(model => model.Products.ElementAt(0).CategoryName)</th>
                    <th>@Html.DisplayNameFor(model => model.Products.ElementAt(0).Brand)</th>
                    <th>Zemlje</th>
                    <th>Akcije</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Products)
                {
                    <tr>
                        <td>@Html.DisplayFor(modelItem => item.Id)</td>
                        <td>@Html.DisplayFor(modelItem => item.Name)</td>
                        <td>@Html.DisplayFor(modelItem => item.Description)</td>
                        <td>@Html.DisplayFor(modelItem => item.Price)</td>
                        <td>@Html.DisplayFor(modelItem => item.CategoryName)</td>
                        <td>@Html.DisplayFor(modelItem => item.Brand)</td>
                        <td>@string.Join(", ", item.CountryNames)</td>
                        <td>
                            <div class="btn-group btn-group-sm" role="group">
                                @Html.ActionLink("Edit", "Edit", new { id = item.Id }, new { @class = "btn btn-outline-primary" })
                                @Html.ActionLink("Details", "Details", new { id = item.Id }, new { @class = "btn btn-outline-secondary" })
                                @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { @class = "btn btn-outline-danger", @id = "btn-delete"})
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    @if (Model.LastPage > 1)
    {
        <nav class="mt-4">
            <ul class="pagination justify-content-center">
                @for (int i = Model.FromPager; i <= Model.ToPager; i++)
                {
                    <li class="page-item @(Model.Page == i ? "active" : "")">
                        <a class="page-link"
                           asp-action="Index"
                           asp-route-Page="@i"
                           asp-route-Q="@Model.Q"
                           asp-route-OrderBy="@Model.OrderBy"
                           asp-route-Size="@Model.Size">@i</a>
                    </li>
                }
            </ul>
        </nav>
    }
</div>

<div class="modal fade" id="confirmDeleteModal" tabindex="-1" role="dialog" aria-labelledby="confirmDeleteModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">INFO</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p id="confirmModalMessage"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" id="confirmDeleteBtn">Yes, Delete</button>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/js/productAdmin.js"></script>
